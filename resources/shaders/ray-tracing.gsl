// Copyright 2022-2025 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef RAY_TRACING_GSL
#define RAY_TRACING_GSL

#define accelerationStructure accelerationStructureEXT
#define hitAttribute hitAttributeEXT

#define gl_LaunchID gl_LaunchIDEXT
#define gl_LaunchSize gl_LaunchSizeEXT
#define gl_InstanceCustomIndex gl_InstanceCustomIndexEXT
#define gl_GeometryIndex gl_GeometryIndexEXT

#define gl_WorldRayOrigin gl_WorldRayOriginEXT
#define gl_WorldRayDirection gl_WorldRayDirectionEXT
#define gl_ObjectRayOrigin gl_ObjectRayOriginEXT
#define gl_ObjectRayDirection gl_ObjectRayDirectionEXT

#define gl_RayTmin gl_RayTminEXT
#define gl_RayTmax gl_RayTmaxEXT
#define gl_RayTmin gl_RayTminEXT
#define gl_RayTmax gl_RayTmaxEXT

#define gl_HitT gl_HitTEXT
#define gl_HitKind gl_HitKindEXT

#define gl_ObjectToWorld gl_ObjectToWorldEXT
#define gl_WorldToObject gl_WorldToObjectEXT
#define gl_WorldToObject3x4 gl_WorldToObject3x4EXT
#define gl_ObjectToWorld3x4 gl_ObjectToWorld3x4EXT

#define gl_IncomingRayFlags gl_IncomingRayFlagsEXT
#define gl_RayFlagsNone gl_RayFlagsNoneEXT
#define gl_RayFlagsOpaque gl_RayFlagsOpaqueEXT
#define gl_RayFlagsNoOpaque gl_RayFlagsNoOpaqueEXT
#define gl_RayFlagsTerminateOnFirstHit gl_RayFlagsTerminateOnFirstHitEXT
#define gl_RayFlagsSkipClosestHitShader gl_RayFlagsSkipClosestHitShaderEXT
#define gl_RayFlagsCullBackFacingTriangles gl_RayFlagsCullBackFacingTrianglesEXT
#define gl_RayFlagsCullFrontFacingTriangles gl_RayFlagsCullFrontFacingTrianglesEXT
#define gl_RayFlagsCullOpaque gl_RayFlagsCullOpaqueEXT
#define gl_RayFlagsCullNoOpaque gl_RayFlagsCullNoOpaqueEXT

#define gl_HitKindFrontFacingTriangle gl_HitKindFrontFacingTriangleEXT
#define gl_HitKindBackFacingTriangle gl_HitKindBackFacingTriangleEXT

#define traceRay traceRayEXT
#define terminateRay terminateRayEXT
#define reportIntersection reportIntersectionEXT
#define ignoreIntersection ignoreIntersectionEXT
#define executeCallable executeCallableEXT

float2 lodFootprint(float distance, float tanHalfFov, float texelDensity, float2 texelSize)
{
	return (distance * tanHalfFov * (2.0f * texelDensity)) * texelSize;
}
float approxLod(float2 footprint, float2 textureSize)
{
	footprint *= textureSize;
	return log2(max(footprint.x, footprint.y));
}
float approxLod(float distance, float tanHalfFov, float texelDensity, float2 texelSize, float2 textureSize)
{
	float2 footprint = lodFootprint(distance, tanHalfFov, texelDensity, texelSize);
	return approxLod(footprint, textureSize);
}

#endif // RAY_TRACING_GSL