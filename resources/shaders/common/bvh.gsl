// Copyright 2022-2025 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Bounding Volume Hierarchy

#ifndef BVH_GSL
#define BVH_GSL

#include "common/aabb.gsl"

struct BvhNode
{
	float4 data0;
	float4 data1;
};

Aabb getNodeAabb(BvhNode node) { return Aabb(node.data0.xyz, node.data1.xyz); }
bool isBvhNodeLeaf(BvhNode node) { return floatBitsToUint(node.data0.w) > 0; }
uint32 getBvhNodePrimitiveCount(BvhNode node) { return floatBitsToUint(node.data0.w); }
uint32 getBvhNodeFirstPrimitive(BvhNode node) { return floatBitsToUint(node.data1.w); }
uint32 getBvhLeftNode(BvhNode node) { return floatBitsToUint(node.data1.w); }

#endif // BVH_GSL