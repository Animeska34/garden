// Copyright 2022-2025 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef DEPTH_GSL
#define DEPTH_GSL

float3 calcWorldPosition(float depth, float2 texCoords, float4x4 invViewProj)
{
	float2 ndc = texCoords * 2.0f - 1.0f;
	float4 position = invViewProj * float4(ndc, depth, 1.0f);
	return position.xyz / position.w; // It also divides by zero, handle if needed.
}
float3 calcWorldPositionSafe(float depth, float2 texCoords, float4x4 invViewProj)
{
	float2 ndc = texCoords * 2.0f - 1.0f;
	float4 position = invViewProj * float4(ndc, depth, 1.0f);
	position.xyz /= position.w != 0.0f ? position.w : 1.0f;
	return position.xyz;
}

float calcDepth(float3 worldPos, float4x4 viewProj)
{
	float4 clipPos = viewProj * float4(worldPos, 1.0f);
	return clipPos.z / clipPos.w;
}
float calcDepthSafe(float3 worldPos, float4x4 viewProj)
{
	float4 position = viewProj * float4(worldPos, 1.0f);
	position.z /= position.w != 0.0f ? position.w : 1.0f
	return position.z;
}

// Infinite Reversed Z Perspective Projection
float calcPerspLinearDepth(float depth, float nearPlane)
{
	return nearPlane / depth; // TODO: check if works correctly
}

float3 calcViewDirection(float3 worldPosition)
{
	return normalize(-worldPosition);
}
float3 calcViewDirection(float depth, float2 texCoords, float4x4 invViewProj)
{
	float3 worldPosition = calcWorldPosition(depth, texCoords, invViewProj);
	return calcViewDirection(worldPosition);
}

#endif // DEPTH_GSL