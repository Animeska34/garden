// Copyright 2022-2025 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef NORMAL_MAPPING_GSL
#define NORMAL_MAPPING_GSL

float3x3 computeTBN(float4x3 model, float3 normal, float3 tangent)
{
	float3 t = normalize(model * float4(tangent, 0.0));
	float3 n = normalize(model * float4(normal, 0.0));
	t = normalize(t - dot(t, n) * n);
	float3 b = cross(n, t);
	return float3x3(t, b, n);
}
float3x3 tbnToTangentSpace(float3x3 tbn)
{
	return transpose(tbn);
}

float3 tbnGetTangent(float3x3 tbn) { return tbn[0]; }
float3 tbnGetBitangent(float3x3 tbn) { return tbn[1]; }
float3 tbnGetNormal(float3x3 tbn) { return tbn[2]; }

#endif // NORMAL_MAPPING_GSL