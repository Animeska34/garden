//--------------------------------------------------------------------------------------------------
// Copyright 2022-2023 Nikita Fediuchin. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//--------------------------------------------------------------------------------------------------

#pragma once
#include <filesystem>

namespace garden
{

namespace fs = std::filesystem;

#define GARDEN_NAME_STRING "@CMAKE_PROJECT_NAME@"
#define GARDEN_VERSION_MAJOR @Garden_VERSION_MAJOR@
#define GARDEN_VERSION_MINOR @Garden_VERSION_MINOR@
#define GARDEN_VERSION_PATCH @Garden_VERSION_PATCH@
#define GARDEN_VERSION_STRING "@Garden_VERSION@"

#define GARDEN_APP_NAME_STRING "@GARDEN_APP_NAME@"
#define GARDEN_APP_NAME_LOWERCASE_STRING "@GARDEN_APP_NAME_LOWERCASE@"
#define GARDEN_APP_VERSION_MAJOR @GARDEN_APP_VERSION_MAJOR@
#define GARDEN_APP_VERSION_MINOR @GARDEN_APP_VERSION_MINOR@
#define GARDEN_APP_VERSION_PATCH @GARDEN_APP_VERSION_PATCH@
#define GARDEN_APP_VERSION_STRING "@GARDEN_APP_VERSION@"

#define GARDEN_DEBUG @GARDEN_DEBUG@
#define GARDEN_EDITOR @GARDEN_EDITOR@
#define GARDEN_LITTLE_ENDIAN @GARDEN_LITTLE_ENDIAN@
#define GARDEN_CACHES_PATH fs::path("@PROJECT_SOURCE_DIR@/.caches")
#define GARDEN_RESOURCES_PATH fs::path("@PROJECT_SOURCE_DIR@/resources")
#define GARDEN_APP_RESOURCES_PATH fs::path("@GARDEN_APP_RESOURCES_DIR@/resources")

#if GARDEN_DEBUG
//--------------------------------------------------------------------------------------------------
#if _WIN32
#define __PRETTY_FUNCTION__ __FUNCSIG__
#endif

#define GARDEN_ASSERT(x) if (!(x)) { printf(                    \
	"Assertion failed: (%s), function %s, file %s, line %d.\n", \
	#x, __PRETTY_FUNCTION__, __FILE__, __LINE__); abort(); }
#else
#define GARDEN_ASSERT(x)
#endif

} // garden